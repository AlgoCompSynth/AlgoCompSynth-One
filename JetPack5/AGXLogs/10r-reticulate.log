
Setting environment variables

Detecting JetPack version
..JETPACK_VERSION: 5.1.1

Setting versions to install
..PYTHON_VERSION: 3.8
..PYTORCH_WHEEL_URL: https://developer.download.nvidia.cn/compute/redist/jp/v511/pytorch/torch-2.0.0+nv23.05-cp38-cp38-linux_aarch64.whl
..PYTORCH_WHEEL_FILE: torch-2.0.0-cp38-cp38-linux_aarch64.whl
..PYTORCH_VERSION: 2.0.0
..TORCHAUDIO_VERSION: 2.0.1
..TORCHVISION_VERSION: 
..CUSIGNAL_VERSION: 23.08.00

Defining CMAKE_BUILD_PARALLEL_LEVEL, MAX_JOBS and MAKEFLAGS
..CMAKE_BUILD_PARALLEL_LEVEL: 8
..MAX_JOBS: 8
..MAKEFLAGS: -j8

Defining virtual desktop
..SYNTH_SCRIPTS: /home/znmeb/Projects/AlgoCompSynth-One/JetPack5/Scripts
..SYNTH_LOGS: /home/znmeb/Projects/AlgoCompSynth-One/JetPack5/Logs
..SYNTH_PROJECTS: /home/znmeb/Projects/AlgoCompSynth-One/JetPack5/Projects
..SYNTH_NOTEBOOKS: /home/znmeb/Projects/AlgoCompSynth-One/JetPack5/Notebooks
..SYNTH_WHEELS: /home/znmeb/Projects/AlgoCompSynth-One/JetPack5/Wheels

Creating virtual desktop
Defining Mambaforge home
MAMBAFORGE_HOME: /home/znmeb/mambaforge
Enabling conda and mamba commands
Creating r-reticulate mamba environment if necessary
..Creating r-reticulate
Activating r-reticulate
Installing PyTorch if necessary
..Installing PyTorch from NVIDIA wheel
Testing PyTorch execution and GPU availability
torch version 2.0.0+nv23.05
CUDA available: True
cuDNN version: 8600
CUDA device count: 1
current CUDA device: 0
CUDA device name: Xavier
Tensor a = tensor([0., 0.], device='cuda:0')
Tensor b = tensor([ 0.6192, -0.5213], device='cuda:0')
Tensor c = tensor([ 0.6192, -0.5213], device='cuda:0')
Installing torchaudio if necessary
..Installing torchaudio
Testing torchaudio import
torch import successful
torchaudio import successful
torchaudio backends: ['sox_io']

Installing 'rTorch' R package
Installing CuPy if necessary
..Installing CuPy
..This can take a long time if the wheel isn't in the pip cache!
Installing cusignal if necessary
..Installing cusignal

Listing Mamba packages

Listing R packages

Finished!
